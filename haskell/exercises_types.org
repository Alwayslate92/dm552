#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:nil
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:nil e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:nil todo:t |:t
#+TITLE: Exercises Types
#+DATE: <2019-02-05 Tue>
#+AUTHOR: Bamse
#+EMAIL: bamse@bamse-X555LN
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.2.2 (Org mode 9.1.14)


#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+LATEX_COMPILER: pdflatex
#+DATE: \today

You can use ~:t~ in the interpreter to see the type of an expression, however, 
try to use it only after you've thought about and maybe written down the type yourself!

* What is the type?
Try to write the type of the following values
- ~['a', 'b', 'c']~
- ~('a', 'b', 'c')~
- ~(True, 'a')~
- ~[(True, 'a'), (False, 'b')]~
- ~([True, False], ['a','b'])~
- ~tail~
- ~reverse~
- ~[tail, reverse]~

* What was the type?
Try looking and some of the following functions that we have used previously, 
and understand their types. Make your guess first, then check it with ~:t~.
- ~length~
- ~head~
- ~null~
- ~take~
- ~maximum~
- ~sum~
- ~elem~
- ~repeat~
- ~cycle~
- ~succ~

* Make the function
Write the type for the following functions, then implement them. 
You are welcome to use functions you have seen or made previously (this does not include ~:t~).
- ~second~, takes a list and returns the second element.
- ~swap~, takes a 2-tuple and returns a tuple with the elements in reverse order.
- ~pair~, takes two elements and returns a tuple of them.
- ~double~, takes a number and returns the double of it.
- ~palindrome~, takes a list and returns whether it is the same forwards and backwards. (Hint: use ~reverse~ in the implementation)
- ~twice~, takes a function and an element the function can be applied to, and applies it twice.

